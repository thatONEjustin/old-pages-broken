---
const { item } = Astro.props;
const { href } = item;

const active = (url_test:string) => {
  return ( url_test == Astro.url.pathname ) ? 'active' : ''
}
---
<li>
  {item.scrollTo == null
  ? 
  <a {href} class={active(href)}>
    <i class={`text-lg nf ${item.icon} pr-1`}></i>
    {item.label}
  </a>
  :
  <a x-data={`{ id: '${item.scrollTo}', options: { behavior: 'smooth', block: 'start' }, }`} class="cursor-pointer" @click="document.getElementById(id).scrollIntoView(options)">
    <i class={`text-lg nf ${item.icon} pr-1`}></i>
    {item.label}
  </a>
  }
</li>

<style lang="tailwind">
li {
  @apply border-r-[1px] border-darker pr-3 mr-3 last:mr-0;

  a {
    @apply relative text-darker-300 transition-all;
    
    &::after {
      @apply absolute -bottom-3 left-0;
      content: '';
      @apply h-[2px] w-0 bg-cyan origin-center transition-all;
    }

    &:hover {
      @apply text-cyan;

      &::after {
        @apply w-full;
      }
    }

    &.active {
      @apply text-green;

      &::after {
        @apply bg-green w-full;
      }
    }
  }
}
</style>
